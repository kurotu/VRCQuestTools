name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2022.3.22f1-windows-mono-3

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Library folder
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-build-${{ github.ref }}
          restore-keys: |
            Library-build-

      - name: Set up vrc-get
        uses: anatawa12/sh-actions/setup-vrc-get@master
      - name: Resolve VPM packages
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          retry_wait_seconds: 60
          command: vrc-get resolve
      - run: vrc-get info project

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # https://github.com/game-ci/unity-builder/issues/497#issuecomment-1407712495
      - name: Locate LICENSE
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |
          FILE_PATH=$(mktemp).ulf
          echo "$UNITY_LICENSE" > $FILE_PATH
          unity-editor -batchmode -nographics -logFile /dev/stdout -quit -manualLicenseFile $FILE_PATH
          rm $FILE_PATH

      - name: Generate Solution
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        run: unity-editor -nographics -logFile /dev/stdout -customBuildName VRCQuestTools -projectPath . -executeMethod Packages.Rider.Editor.RiderScriptEditor.SyncSolution -quit

      - name: Install system Node.js
        run: apt update && apt install -y nodejs

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: Website/pnpm-lock.yaml
      - run: cd Website && pnpm install --frozen-lockfile
